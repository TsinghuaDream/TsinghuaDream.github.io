{"title":"数据库（mysql）","uid":"1d53460b3441299b24ab126073336160","slug":"MySQL基础课堂笔记","date":"2021-03-23T04:00:16.000Z","updated":"2021-03-29T06:18:10.416Z","comments":true,"path":"api/articles/MySQL基础课堂笔记.json","keywords":null,"cover":null,"content":"<h1 id=\"今日内容\"><a href=\"#今日内容\" class=\"headerlink\" title=\"今日内容\"></a>今日内容</h1><ol>\n<li>数据库的基本概念</li>\n</ol>\n<ol start=\"2\">\n<li><p>MySQL数据库软件</p>\n<ol>\n<li>安装</li>\n<li>卸载</li>\n<li>配置</li>\n</ol>\n</li>\n<li><p>SQL</p>\n</li>\n</ol>\n<h2 id=\"数据库的基本概念\"><a href=\"#数据库的基本概念\" class=\"headerlink\" title=\"数据库的基本概念\"></a>数据库的基本概念</h2><pre><code>1. 数据库的英文单词： DataBase 简称 ： DB\n2. 什么数据库？\n    * 用于存储和管理数据的仓库。\n\n3. 数据库的特点：\n    1. 持久化存储数据的。其实数据库就是一个文件系统\n    2. 方便存储和管理数据\n    3. 使用了统一的方式操作数据库 -- SQL\n</code></pre>\n<p>​<br>    4. 常见的数据库软件<br>        * 参见《MySQL基础.pdf》</p>\n<h1 id=\"MySQL数据库软件\"><a href=\"#MySQL数据库软件\" class=\"headerlink\" title=\"MySQL数据库软件\"></a>MySQL数据库软件</h1><pre><code>1. 安装\n    * 参见《MySQL基础.pdf》\n2. 卸载\n    1. 去mysql的安装目录找到my.ini文件\n        * 复制 datadir=&quot;C:/ProgramData/MySQL/MySQL Server 5.5/Data/&quot;\n    2. 卸载MySQL\n    3. 删除C:/ProgramData目录下的MySQL文件夹。\n    \n3. 配置\n    * MySQL服务启动\n        1. 手动。\n        2. cmd--&gt; services.msc 打开服务的窗口\n        3. 使用管理员打开cmd\n            * net start mysql : 启动mysql的服务\n            * net stop mysql:关闭mysql服务\n    * MySQL登录\n        1. mysql -uroot -p密码\n        2. mysql -hip -uroot -p连接目标的密码\n        3. mysql --host=ip --user=root --password=连接目标的密码\n    * MySQL退出\n        1. exit\n        2. quit\n\n    * MySQL目录结构\n        1. MySQL安装目录：basedir=&quot;D:/develop/MySQL/&quot;\n            * 配置文件 my.ini\n        2. MySQL数据目录：datadir=&quot;C:/ProgramData/MySQL/MySQL Server 5.5/Data/&quot;\n            * 几个概念\n                * 数据库：文件夹\n                * 表：文件\n                * 数据：数据\n</code></pre>\n<h1 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h1><pre><code>1.什么是SQL？\n    Structured Query Language：结构化查询语言\n    其实就是定义了操作所有关系型数据库的规则。每一种数据库操作的方式存在不一样的地方，称为“方言”。\n    \n2.SQL通用语法\n    1. SQL 语句可以单行或多行书写，以分号结尾。\n    2. 可使用空格和缩进来增强语句的可读性。\n    3. MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。\n    4. 3 种注释\n        * 单行注释: -- 注释内容 或 # 注释内容(mysql 特有) \n        * 多行注释: /* 注释 */\n    \n3. SQL分类\n    1) DDL(Data Definition Language)数据定义语言\n        用来定义数据库对象：数据库，表，列等。关键字：create, drop,alter 等\n    2) DML(Data Manipulation Language)数据操作语言\n        用来对数据库中表的数据进行增删改。关键字：insert, delete, update 等\n    3) DQL(Data Query Language)数据查询语言\n        用来查询数据库中表的记录(数据)。关键字：select, where 等\n    4) DCL(Data Control Language)数据控制语言(了解)\n        用来定义数据库的访问权限和安全级别，及创建用户。关键字：GRANT， REVOKE 等\n</code></pre>\n<h2 id=\"DDL-操作数据库、表\"><a href=\"#DDL-操作数据库、表\" class=\"headerlink\" title=\"DDL:操作数据库、表\"></a>DDL:操作数据库、表</h2><pre><code>1. 操作数据库：CRUD\n    1. C(Create):创建\n        * 创建数据库：\n            * create database 数据库名称;\n        * 创建数据库，判断不存在，再创建：\n            * create database if not exists 数据库名称;\n        * 创建数据库，并指定字符集\n            * create database 数据库名称 character set 字符集名;\n\n        * 练习： 创建db4数据库，判断是否存在，并制定字符集为gbk\n            * create database if not exists db4 character set gbk;\n    2. R(Retrieve)：查询\n        * 查询所有数据库的名称:\n            * show databases;\n        * 查询某个数据库的字符集:查询某个数据库的创建语句\n            * show create database 数据库名称;\n    3. U(Update):修改\n        * 修改数据库的字符集\n            * alter database 数据库名称 character set 字符集名称;\n    4. D(Delete):删除\n        * 删除数据库\n            * drop database 数据库名称;\n        * 判断数据库存在，存在再删除\n            * drop database if exists 数据库名称;\n    5. 使用数据库\n        * 查询当前正在使用的数据库名称\n            * select database();\n        * 使用数据库\n            * use 数据库名称;\n\n\n2. 操作表\n    1. C(Create):创建\n        1. 语法：\n            create table 表名(\n                列名1 数据类型1,\n                列名2 数据类型2,\n                ....\n                列名n 数据类型n\n            );\n            * 注意：最后一列，不需要加逗号（,）\n            * 数据库类型：\n                1. int：整数类型\n                    * age int,\n                2. double:小数类型\n                    * score double(5,2)\n                3. date:日期，只包含年月日，yyyy-MM-dd\n                4. datetime:日期，包含年月日时分秒     yyyy-MM-dd HH:mm:ss\n                5. timestamp:时间错类型    包含年月日时分秒     yyyy-MM-dd HH:mm:ss    \n                    * 如果将来不给这个字段赋值，或赋值为null，则默认使用当前的系统时间，来自动赋值\n\n                6. varchar：字符串\n                    * name varchar(20):姓名最大20个字符\n                    * zhangsan 8个字符  张三 2个字符\n\n\n        * 创建表\n            create table student(\n                id int,\n                name varchar(32),\n                age int ,\n                score double(4,1),\n                birthday date,\n                insert_time timestamp\n            );\n        * 复制表：\n            * create table 表名 like 被复制的表名;          \n    2. R(Retrieve)：查询\n        * 查询某个数据库中所有的表名称\n            * show tables;\n        * 查询表结构\n            * desc 表名;\n    3. U(Update):修改\n        1. 修改表名\n            alter table 表名 rename to 新的表名;\n        2. 修改表的字符集\n            alter table 表名 character set 字符集名称;\n        3. 添加一列\n            alter table 表名 add 列名 数据类型;\n        4. 修改列名称 类型\n            alter table 表名 change 列名 新列别 新数据类型;\n            alter table 表名 modify 列名 新数据类型;\n        5. 删除列\n            alter table 表名 drop 列名;\n    4. D(Delete):删除\n        * drop table 表名;\n        * drop table  if exists 表名 ;\n</code></pre>\n<ul>\n<li>客户端图形化工具：SQLYog</li>\n</ul>\n<h2 id=\"DML：增删改表中数据\"><a href=\"#DML：增删改表中数据\" class=\"headerlink\" title=\"DML：增删改表中数据\"></a>DML：增删改表中数据</h2><pre><code>1. 添加数据：\n    * 语法：\n        * insert into 表名(列名1,列名2,...列名n) values(值1,值2,...值n);\n    * 注意：\n        1. 列名和值要一一对应。\n        2. 如果表名后，不定义列名，则默认给所有列添加值\n            insert into 表名 values(值1,值2,...值n);\n        3. 除了数字类型，其他类型需要使用引号(单双都可以)引起来\n2. 删除数据：\n    * 语法：\n        * delete from 表名 [where 条件]\n    * 注意：\n        1. 如果不加条件，则删除表中所有记录。\n        2. 如果要删除所有记录\n            1. delete from 表名; -- 不推荐使用。有多少条记录就会执行多少次删除操作\n            2. TRUNCATE TABLE 表名; -- 推荐使用，效率更高 先删除表，然后再创建一张一样的表。\n3. 修改数据：\n    * 语法：\n        * update 表名 set 列名1 = 值1, 列名2 = 值2,... [where 条件];\n\n    * 注意：\n        1. 如果不加任何条件，则会将表中所有记录全部修改。\n</code></pre>\n<h2 id=\"DQL：查询表中的记录\"><a href=\"#DQL：查询表中的记录\" class=\"headerlink\" title=\"DQL：查询表中的记录\"></a>DQL：查询表中的记录</h2><pre><code>* select * from 表名;\n\n1. 语法：\n    select\n        字段列表\n    from\n        表名列表\n    where\n        条件列表\n    group by\n        分组字段\n    having\n        分组之后的条件\n    order by\n        排序\n    limit\n        分页限定\n\n\n2. 基础查询\n    1. 多个字段的查询\n        select 字段名1，字段名2... from 表名；\n        * 注意：\n            * 如果查询所有字段，则可以使用*来替代字段列表。\n    2. 去除重复：\n        * distinct\n    3. 计算列\n        * 一般可以使用四则运算计算一些列的值。（一般只会进行数值型的计算）\n        * ifnull(表达式1,表达式2)：null参与的运算，计算结果都为null\n            * 表达式1：哪个字段需要判断是否为null\n            * 如果该字段为null后的替换值。\n    4. 起别名：\n        * as：as也可以省略\n\n\n3. 条件查询\n    1. where子句后跟条件\n    2. 运算符\n        * &gt; 、&lt; 、&lt;= 、&gt;= 、= 、&lt;&gt;\n        * BETWEEN...AND  \n        * IN( 集合) \n        * LIKE：模糊查询\n            * 占位符：\n                * _:单个任意字符\n                * %：多个任意字符\n        * IS NULL  \n        * and  或 &amp;&amp;\n        * or  或 || \n        * not  或 !\n        \n            -- 查询年龄大于20岁\n\n            SELECT * FROM student WHERE age &gt; 20;\n            \n            SELECT * FROM student WHERE age &gt;= 20;\n            \n            -- 查询年龄等于20岁\n            SELECT * FROM student WHERE age = 20;\n            \n            -- 查询年龄不等于20岁\n            SELECT * FROM student WHERE age != 20;\n            SELECT * FROM student WHERE age &lt;&gt; 20;\n            \n            -- 查询年龄大于等于20 小于等于30\n            \n            SELECT * FROM student WHERE age &gt;= 20 &amp;&amp;  age &lt;=30;\n            SELECT * FROM student WHERE age &gt;= 20 AND  age &lt;=30;\n            SELECT * FROM student WHERE age BETWEEN 20 AND 30;\n            \n            -- 查询年龄22岁，18岁，25岁的信息\n            SELECT * FROM student WHERE age = 22 OR age = 18 OR age = 25\n            SELECT * FROM student WHERE age IN (22,18,25);\n            \n            -- 查询英语成绩为null\n            SELECT * FROM student WHERE english = NULL; -- 不对的。null值不能使用 = （!=） 判断\n            \n            SELECT * FROM student WHERE english IS NULL;\n            \n            -- 查询英语成绩不为null\n            SELECT * FROM student WHERE english  IS NOT NULL;\n\n\n\n            -- 查询姓马的有哪些？ like\n            SELECT * FROM student WHERE NAME LIKE &#39;马%&#39;;\n            -- 查询姓名第二个字是化的人\n            \n            SELECT * FROM student WHERE NAME LIKE &quot;_化%&quot;;\n            \n            -- 查询姓名是3个字的人\n            SELECT * FROM student WHERE NAME LIKE &#39;___&#39;;\n</code></pre>\n<p>​<br>                – 查询姓名中包含德的人<br>                SELECT * FROM student WHERE NAME LIKE ‘%德%’;</p>\n<p>​    </p>\n","feature":null,"text":"今日内容 数据库的基本概念 MySQL数据库软件 安装 卸载 配置 SQL 数据库的基本概念1. 数据库的英文单词： DataBase 简称 ： DB 2. 什么数据库？ * 用于存储和管理数据的仓库。 3. 数据库的特点： 1. 持久化存储数据的。其实数据库就是一个文件系统 2...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"数据库","slug":"数据库","count":2,"path":"api/tags/数据库.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%8A%E6%97%A5%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">今日内容</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">数据库的基本概念</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">MySQL数据库软件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SQL\"><span class=\"toc-text\">SQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DDL-%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%81%E8%A1%A8\"><span class=\"toc-text\">DDL:操作数据库、表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DML%EF%BC%9A%E5%A2%9E%E5%88%A0%E6%94%B9%E8%A1%A8%E4%B8%AD%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">DML：增删改表中数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DQL%EF%BC%9A%E6%9F%A5%E8%AF%A2%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">DQL：查询表中的记录</span></a></li></ol></li></ol>","author":{"name":"Phoenix","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我在天台抽着烟 我抽一半，风抽一半 我没和风计较 因为风也有自己的忧愁","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数据库连接池（jdbc）","uid":"997fa7c1b5358f16e6c47f75508528f9","slug":"JDBC连接池&JDBCTemplate课堂笔记","date":"2021-03-23T04:00:16.000Z","updated":"2021-03-29T06:18:03.610Z","comments":true,"path":"api/articles/JDBC连接池&JDBCTemplate课堂笔记.json","keywords":null,"cover":null,"text":"今日内容1. 数据库连接池 2. Spring JDBC : JDBC Template 数据库连接池1. 概念：其实就是一个容器(集合)，存放数据库连接的容器。 当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用户访问完之后，...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"数据库","slug":"数据库","count":2,"path":"api/tags/数据库.json"}],"author":{"name":"Phoenix","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我在天台抽着烟 我抽一半，风抽一半 我没和风计较 因为风也有自己的忧愁","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Spring Boot 总结","uid":"2f6fa7c456d90ea78f2273a18fcc64b4","slug":"Spring Boot课堂笔记","date":"2021-03-23T04:00:16.000Z","updated":"2021-03-29T00:35:25.235Z","comments":true,"path":"api/articles/Spring Boot课堂笔记.json","keywords":null,"cover":[],"text":"1. Spring Boot概述目标：了解Spring Boot是什么，有什么作用 小结： Spring Boot是一个便捷搭建 基于spring工程的脚手架；作用是帮助开发人员快速搭建大型的spring 项目。简化工程的配置，依赖管理；实现开发人员把时间都集中在业务开发上。 2...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"}],"author":{"name":"Phoenix","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"我在天台抽着烟 我抽一半，风抽一半 我没和风计较 因为风也有自己的忧愁","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}